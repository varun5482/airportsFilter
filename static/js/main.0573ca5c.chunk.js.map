{"version":3,"sources":["components/tableDisplay.jsx","components/filter.jsx","components/airportListing.jsx","App.js","reportWebVitals.js","index.js"],"names":["tableDisplay","props","tabularData","data","map","item","key","name","icao","iata","elevation","latitude","toFixed","longitude","type","id","className","Filter","filterData","updateFilter","handleChange","options","e","action","dummyFilter","value","target","searchTerm","checked","checkBox","push","index","indexOf","splice","console","log","class","onChange","for","AirportListing","sessionStorage","window","useState","airportData","currentData","updateCurrentData","currentFilteredResult","updateFilterResult","isMobile","test","navigator","userAgent","curentPage","dataLength","length","pageData","updatePageData","useEffect","handlePagination","dummyPageData","windowData","screen","width","scrollTo","top","behavior","filteredData","isCached","forEach","getItem","JSON","parse","add","termMatch","term","toLocaleLowerCase","toLowerCase","includes","isNaN","Number","dataToStore","stringify","setItem","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0573ca5c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst tableDisplay = (props) => {\r\n    let {data} = props;\r\n    let tabularData = data.map((item,key) => {\r\n        return <tr key={item.id}>\r\n            <td>{item.name || '-'}</td>\r\n            <td>{item.icao || '-'}</td>\r\n            <td>{item.iata || '-'}</td>\r\n            <td>{item.elevation || '-'} ft</td>\r\n            <td>{(item.latitude).toFixed(2) || '-'}</td>\r\n            <td>{(item.longitude).toFixed(2)|| '-'}</td>\r\n            <td>{item.type}</td>\r\n        </tr>\r\n    })\r\n    return (\r\n        <div className=\"tablular-data\">\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"left-align heading-tab\">\r\n                        <th>Name</th>\r\n                        <th>ICAO</th>\r\n                        <th>IATA</th>\r\n                        <th>Elev.</th>\r\n                        <th>Lat.</th>\r\n                        <th>Long.</th>\r\n                        <th>Type</th>\r\n                    </tr>    \r\n                </thead>\r\n                {tabularData}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default tableDisplay\r\n","import React from 'react';\r\nimport './airport-styles.scss';\r\n\r\nconst Filter = (props) => {\r\n    let {filterData,updateFilter} = props;\r\n    const handleChange = (options={})=>{\r\n        let {e,action} = options;\r\n        let dummyFilter = {...filterData};\r\n        let value = e.target.value;\r\n        switch(action){\r\n            case 'text':\r\n                dummyFilter.searchTerm = value;\r\n                break;\r\n            case 'checkBox':\r\n                if(e.target.checked){\r\n                    dummyFilter.checkBox.push(value);\r\n                }else{\r\n                    let index = dummyFilter.checkBox.indexOf(value);\r\n                    dummyFilter.checkBox.splice(index,1);\r\n                }\r\n                break;\r\n            default:\r\n                console.log(\"No case found\");\r\n        }  \r\n        updateFilter(dummyFilter); \r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-container\">\r\n            <div className=\"check-container\">\r\n                <div className=\"filter-title\">Type</div>\r\n                <div>\r\n                    <span className=\"check-box-holder\">\r\n                        <input class=\"styled-checkbox\" id=\"styled-checkbox-1\" type=\"checkbox\" value=\"small\" onChange={(e)=>{handleChange({e,action:'checkBox'})}} />\r\n                        <label for=\"styled-checkbox-1\">Small</label>\r\n                    </span>\r\n                    <span className=\"check-box-holder\">\r\n                        <input class=\"styled-checkbox\" id=\"styled-checkbox-2\" type=\"checkbox\" value=\"medium\" onChange={(e)=>{handleChange({e,action:'checkBox'})}}/>\r\n                        <label for=\"styled-checkbox-2\">Medium</label>\r\n                    </span>\r\n                    <span className=\"check-box-holder\">\r\n                        <input class=\"styled-checkbox\" id=\"styled-checkbox-3\" type=\"checkbox\" value=\"large\" onChange={(e)=>{handleChange({e,action:'checkBox'})}}/>\r\n                        <label for=\"styled-checkbox-3\">Large</label>\r\n                    </span>\r\n                    <span className=\"check-box-holder\">\r\n                        <input class=\"styled-checkbox\" id=\"styled-checkbox-4\" type=\"checkbox\" value=\"heliport\" onChange={(e)=>{handleChange({e,action:'checkBox'})}}/>\r\n                        <label for=\"styled-checkbox-4\">Heliport</label>\r\n                    </span>\r\n                    <span className=\"check-box-holder\">\r\n                        <input class=\"styled-checkbox\" id=\"styled-checkbox-5\" type=\"checkbox\" value=\"closed\" onChange={(e)=>{handleChange({e,action:'checkBox'})}}/>\r\n                        <label for=\"styled-checkbox-5\">Closed</label>\r\n                    </span>\r\n                    <span className=\"check-box-holder\">\r\n                        <input class=\"styled-checkbox\" id=\"styled-checkbox-6\" type=\"checkbox\" value=\"favourites\" onChange={(e)=>{handleChange({e,action:'checkBox'})}}/>\r\n                        <label for=\"styled-checkbox-6\">In Your Favourites</label>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"search-container\">\r\n                <div className=\"filter-title\">Filter by Search</div>\r\n                <div>\r\n                    <input className=\"search-text\" value={filterData.searchTerm} onChange={(e)=>{handleChange({e,action:'text'})}}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React,{useState,useEffect} from 'react'\r\nimport TableDisplay from './tableDisplay';\r\nimport airportData from './data/airports.json';\r\nimport Filter from './filter';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport './airport-styles.scss';\r\n\r\nconst AirportListing = (props) => {\r\n    let sessionStorage = window.sessionStorage;\r\n    const [currentData,updateCurrentData] = useState(airportData);\r\n    const [currentFilteredResult,updateFilterResult] = useState(airportData);\r\n    const [filterData,updateFilter] = useState({\r\n        checkBox:[],\r\n        searchTerm:''\r\n    })\r\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n    const limit  = 4;\r\n    const [pageData,updatePageData] = useState({\r\n        curentPage: -1,\r\n        dataLength : currentData.length,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        updatePageData({\r\n            curentPage: 0,\r\n            dataLength: currentFilteredResult.length,\r\n        })\r\n    },[])\r\n\r\n    const handlePagination = (options = {}) => {\r\n        let {action} = options;\r\n        let dummyPageData = {...pageData};\r\n        switch(action){\r\n            case 'forward':\r\n                dummyPageData.curentPage += limit;\r\n                if(dummyPageData.curentPage > currentFilteredResult.length){\r\n                    dummyPageData.curentPage -= limit;\r\n                } \r\n                break;\r\n            case 'back':\r\n                dummyPageData.curentPage -= limit;\r\n                if(dummyPageData.curentPage < 0){\r\n                    dummyPageData.curentPage += limit;\r\n                }\r\n                break;\r\n        }\r\n        updatePageData(dummyPageData);\r\n        let windowData = window.screen;\r\n        if(windowData.width < 600){\r\n            window.scrollTo({\r\n                top: 0,\r\n                behavior: 'smooth',});\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        let data = [];\r\n        for(let index=pageData.curentPage;index<(pageData.curentPage + limit);index++){\r\n            if(currentFilteredResult[index]){\r\n                data.push(currentFilteredResult[index]);\r\n            }\r\n        }\r\n        updateCurrentData(data);\r\n    },[pageData,currentFilteredResult])\r\n\r\n    useEffect(()=>{\r\n        let filteredData= [];\r\n        let key = '';\r\n        let isCached = false;\r\n        if(filterData.checkBox.length){\r\n            filterData.checkBox.forEach(value => {\r\n                key += value;\r\n            })\r\n        }\r\n        if(filterData.searchTerm){\r\n            key += filterData.searchTerm;\r\n        }\r\n\r\n        //Caching Implemented using Session Storage\r\n        if(sessionStorage.getItem(key)){\r\n            isCached = true;\r\n            filteredData = JSON.parse(sessionStorage.getItem(key));\r\n        }else if(filterData.searchTerm === '' && filterData.checkBox.length === 0){\r\n            filteredData = airportData;\r\n        }else{\r\n            airportData.forEach((value) => {\r\n                let add = false;\r\n                let termMatch = false;\r\n                if(filterData.checkBox.indexOf(value.type) !== -1){\r\n                    add = true;\r\n                }else if(filterData.checkBox.length == 0){\r\n                    add = true;\r\n                }\r\n                if(filterData.searchTerm){\r\n                    let term = (filterData.searchTerm).toLocaleLowerCase();\r\n                    if((value.name && ((value.name).toLowerCase()).includes(term)) || (value.icao && ((value.icao).toLowerCase()).includes(term)) || (value.iata && ((value.iata).toLowerCase()).includes(term))){\r\n                        termMatch = true;\r\n                    }\r\n                    if(!isNaN(term) && (value.latitude === Number(term) || value.longitude === Number(term))){\r\n                        termMatch = true;\r\n                    }\r\n                }else{\r\n                    termMatch = true;\r\n                }\r\n                if(add && termMatch){\r\n                    filteredData.push(value);\r\n                }\r\n            })\r\n        }\r\n       \r\n        if(!isCached){\r\n            let dataToStore = [...filteredData];\r\n            dataToStore = JSON.stringify(dataToStore);\r\n            sessionStorage.setItem(key,dataToStore);\r\n        }\r\n        updatePageData({\r\n            curentPage: 0,\r\n            dataLength: currentFilteredResult.length,\r\n        })\r\n        updateFilterResult(filteredData);\r\n    },[filterData]);\r\n\r\n    return (\r\n        <div className={`filter-app ${isMobile ? 'mobile-app':'web-app'}`}>\r\n            <div className=\"title-holder\">\r\n                <span className=\"bold-title\">Filter</span>\r\n                <span>airports</span>\r\n            </div>\r\n            <div className=\"options-filter-container\">\r\n                <Filter filterData={filterData} updateFilter={(data)=>{updateFilter(data)}} />\r\n            </div>\r\n            <div>\r\n                <TableDisplay data={currentData}/>\r\n            </div>\r\n            <div className=\"page-info\">\r\n                <div className=\"arrow-icon\" onClick={()=>{handlePagination({action:'back'})}}><ArrowBackIcon /></div>\r\n                <div className=\"text-field\">Showing <span className=\"bold-text\">{currentFilteredResult.length == 0 ? 0 : pageData.curentPage + 1}</span> - <span className=\"bold-text\">{(pageData.curentPage + limit) > currentFilteredResult.length ? currentFilteredResult.length : (pageData.curentPage + limit)}</span> of <span className=\"bold-text\">{currentFilteredResult.length}</span></div>\r\n                <div className=\"arrow-icon\" onClick={()=>{handlePagination({action:'forward'})}}><ArrowForwardIcon/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AirportListing\r\n","import AirportListing from './components/airportListing';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AirportListing />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}